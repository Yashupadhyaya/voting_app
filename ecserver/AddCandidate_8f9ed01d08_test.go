// Test generated by RoostGPT for test demo56 using AI Type Open AI and AI Model gpt-4

package main

import (
	"bytes"
	"encoding/json"
	"net/http"
	"net/http/httptest"
	"testing"
)

var candidates = []*Candidate{
	{
		Name:     "John",
		ImageUrl: "http://example.com/john.jpg",
	},
	{
		Name:     "Jane",
		ImageUrl: "http://example.com/jane.jpg",
	},
}

func TestAddCandidate_8f9ed01d08(t *testing.T) {
	// Test Case 1: Adding a new candidate
	reqBody, err := json.Marshal(&Candidate{Name: "NewCandidate", ImageUrl: "http://example.com/new.jpg"})
	if err != nil {
		t.Fatal(err)
	}

	req, err := http.NewRequest("POST", "/addCandidate", bytes.NewBuffer(reqBody))
	if err != nil {
		t.Fatal(err)
	}

	rr := httptest.NewRecorder()
	handler := http.HandlerFunc(addCandidate)
	handler.ServeHTTP(rr, req)

	if status := rr.Code; status != http.StatusOK {
		t.Errorf("handler returned wrong status code: got %v want %v", status, http.StatusOK)
	}

	if len(candidates) != 3 {
		t.Errorf("expected 3 candidates, got %d", len(candidates))
	}

	// Test Case 2: Updating an existing candidate
	reqBody, err = json.Marshal(&Candidate{Name: "John", ImageUrl: "http://example.com/newjohn.jpg"})
	if err != nil {
		t.Fatal(err)
	}

	req, err = http.NewRequest("POST", "/addCandidate", bytes.NewBuffer(reqBody))
	if err != nil {
		t.Fatal(err)
	}

	rr = httptest.NewRecorder()
	handler.ServeHTTP(rr, req)

	if status := rr.Code; status != http.StatusOK {
		t.Errorf("handler returned wrong status code: got %v want %v", status, http.StatusOK)
	}

	if len(candidates) != 3 {
		t.Errorf("expected 3 candidates, got %d", len(candidates))
	}

	if candidates[0].ImageUrl != "http://example.com/newjohn.jpg" {
		t.Errorf("expected updated image url for John, got %s", candidates[0].ImageUrl)
	}
}
